@use '@/styles/enums' as *;

@mixin respond-to($breakpoint) {
	@if $breakpoint == mobile {
		@media (max-width: $mobile) {
			@content;
		}
	} @else if $breakpoint == tablet {
		@media (max-width: $tablet) {
			@content;
		}
	} @else if $breakpoint == laptop {
		@media (max-width: $laptop) {
			@content;
		}
	} @else if $breakpoint == desktop {
		@media (max-width: $desktop) {
			@content;
		}
	}
}

.content {
	background-color: rgb(26, 26, 26);
	color: $textColorPrimary;
	width: 100vw;
	min-height: 100vh;
	display: flex;
	align-items: center;
	justify-content: center;
	flex-direction: column;
	gap: calc($spacing * 2);

	&_title {
		font-size: 50px;
    text-align: center;

		@include respond-to(mobile) {
			font-size: 40px;
		}

	}

	&_profile {
		display: flex;
		flex-direction: row;
		align-items: center;
		justify-content: center;
		gap: calc($spacing * 2);

		@include respond-to(mobile) {
			gap: calc($spacing / 2);
		}

		&_item {
			display: flex;
			flex-direction: column;
			align-items: center;
			gap: $spacing;
			cursor: pointer;

			&_img {
				width: 150px;
				height: 150px;
				position: relative;
				overflow: hidden;
				border-radius: calc(
					$radius /
						4
				);
				border: 4px
					solid
					transparent;

				@include respond-to(
					mobile
				) {
					width: 50px;
					height: 50px;
				}

				@include respond-to(
					tablet
				) {
					width: 100px;
					height: 100px;
				}
			}

			&_title {
				font-size: 20px;
				color: $textColorSecondary;
			}
		}

		&_item:hover > &_item_img {
			border: 4px solid
				$textColorPrimary;
		}

		&_item:hover > &_item_title {
			color: $textColorPrimary;
		}
	}
}
